syntax = "proto3";
package canto.coinswap.v1;

import "canto/coinswap/v1/coinswap.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Canto-Network/Canto/v7/x/coinswap/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the coinswap Msg service
service Msg {
  // AddLiquidity defines a method for depositing some tokens to the liquidity
  // pool
  rpc AddLiquidity(MsgAddLiquidity) returns (MsgAddLiquidityResponse);

  // RemoveLiquidity defines a method for withdraw some tokens from the
  // liquidity pool
  rpc RemoveLiquidity(MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);

  // SwapCoin defines a method for swapping a token with the other token from
  // the liquidity pool
  rpc SwapCoin(MsgSwapOrder) returns (MsgSwapCoinResponse);
}

// MsgAddLiquidity defines a msg for adding liquidity to a reserve pool
message MsgAddLiquidity {
  cosmos.base.v1beta1.Coin max_token = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"max_token\""
  ];
  string exact_standard_amt = 2 [
    (gogoproto.moretags) = "yaml:\"exact_standard_amt\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string min_liquidity = 3 [
    (gogoproto.moretags) = "yaml:\"min_liquidity\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 deadline = 4;
  string sender = 5;
}

// MsgAddLiquidityResponse defines the Msg/AddLiquidity response type
message MsgAddLiquidityResponse { cosmos.base.v1beta1.Coin mint_token = 1; }

// MsgRemoveLiquidity defines a msg for removing liquidity from a reserve pool
message MsgRemoveLiquidity {
  cosmos.base.v1beta1.Coin withdraw_liquidity = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"withdraw_liquidity\""
  ];
  string min_token = 2 [
    (gogoproto.moretags) = "yaml:\"min_token\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string min_standard_amt = 3 [
    (gogoproto.moretags) = "yaml:\"min_standard_amt\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 deadline = 4;
  string sender = 5;
}

// MsgRemoveLiquidityResponse defines the Msg/RemoveLiquidity response type
message MsgRemoveLiquidityResponse {
  repeated cosmos.base.v1beta1.Coin withdraw_coins = 1;
}

// MsgSwapOrder defines a msg for swap order
message MsgSwapOrder {
  Input input = 1 [ (gogoproto.nullable) = false ];
  Output output = 2 [ (gogoproto.nullable) = false ];
  int64 deadline = 3;
  bool is_buy_order = 4 [ (gogoproto.moretags) = "yaml:\"is_buy_order\"" ];
}

// MsgSwapCoinResponse defines the Msg/SwapCoin response type
message MsgSwapCoinResponse {}