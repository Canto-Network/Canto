syntax = "proto3";
package canto.coinswap.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Canto-Network/Canto/v7/x/coinswap/types";
option (gogoproto.goproto_getters_all) = false;

// Input defines the properties of order's input
message Input {
  string address = 1;
  cosmos.base.v1beta1.Coin coin = 2 [ (gogoproto.nullable) = false ];
}

// Output defines the properties of order's output
message Output {
  string address = 1;
  cosmos.base.v1beta1.Coin coin = 2 [ (gogoproto.nullable) = false ];
}

message Pool {
  string id = 1;
  // denom of base coin of the pool
  string standard_denom = 2;
  // denom of counterparty coin of the pool
  string counterparty_denom = 3;
  // escrow account for deposit tokens
  string escrow_address = 4;
  // denom of the liquidity pool coin
  string lpt_denom = 5;
}

// Params defines token module's parameters
message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  cosmos.base.v1beta1.Coin fee = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  cosmos.base.v1beta1.Coin pool_creation_fee = 2
      [ (gogoproto.nullable) = false ];

  string tax_rate = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string max_standard_coin_per_pool = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  repeated cosmos.base.v1beta1.Coin max_swap_amount = 6 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}
